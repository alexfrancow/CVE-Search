import requests
from bs4 import BeautifulSoup
from datetime import datetime
from datetime import date
import twint
import pandas as pd
from app.mods.mod_main.databasePSQL import PSQLDatabase


def getTweets(cve):
    db = PSQLDatabase()
    db.query(f"SELECT publised_date from CVES where CVE_id = '{cve}'")
    NVD_Published_Date = db.cursor.fetchone()[0]

    tweets = []
    c = twint.Config()
    c.Search = cve
    c.Since = NVD_Published_Date
    c.Store_object = True
    c.Hide_output = True
    c.Filter_retweets = True
    c.Store_object_tweets_list = tweets

    twint.run.Search(c)

    for t in tweets:
        url_list = ','.join([u for u in t.urls ])
        santweet = t.tweet.replace("'","")
        sqlquery = f"""INSERT INTO TwitterTweets (CVE_id, tweet_id, tweet, Datestamp, retweet_count, Replies_Count, Likes_Count, URLs)
                        VALUES ('{cve}','{t.id}','{santweet}','{t.datestamp}','{t.retweets_count}','{t.replies_count}','{t.likes_count}','{url_list}')
                        ON CONFLICT (tweet_id)
                        DO UPDATE SET
                        retweet_count = excluded.retweet_count,
                        Replies_Count = excluded.Replies_Count,
                        Likes_Count = excluded.Likes_Count
                        ;"""
        print(sqlquery)
        db.query(sqlquery)
    db.conn.commit()
    db.close()
    return "OK"


def tweetsJSON(cve):
    db = PSQLDatabase()
    sqlquery = f"""SELECT Datestamp, tweet, tweet_id, retweet_count, replies_count, likes_count FROM TwitterTweets where cve_id = '{cve}';"""
    db.query(sqlquery)
    data_tweet = db.cursor.fetchall()
    df_tweet = pd.DataFrame(columns=['Date','Tweet','ID', 'RTs', 'Replies', 'Likes'])
    for data in data_tweet:
        index = len(df_tweet)
        df_tweet.loc[index,'Date'] = data[0]
        df_tweet.loc[index,'Tweet'] = data[1]
        df_tweet.loc[index,'ID'] = data[2]
        df_tweet.loc[index,'RTs'] = data[3]
        df_tweet.loc[index,'Replies'] = data[4]
        df_tweet.loc[index,'Likes'] = data[5]

    data = {}
    data['dates'] = []
    data['tweet_volume'] = []
    data['likes_volume'] = []
    data['retweets_volume'] = []
    data['max_tweets'] = []

    df_dates = pd.DataFrame()
    df_dates = df_tweet.groupby('Date')['Tweet'].apply(list).reset_index(name='Tweet')
    df_dates['tweet_count'] = [len(c) for c in df_dates['Tweet']]
    df_dates['likes_count'] = df_tweet.groupby('Date')['Likes'].sum().tolist()
    df_dates['retweets_count'] = df_tweet.groupby('Date')['RTs'].sum().tolist()
    df_dates['max_tweets'] = df_tweet.groupby('Date')['Tweet'].max().tolist()

    for date in df_dates['Date'].tolist():
        data['dates'].append(date)

    for tweet_count in df_dates['tweet_count'].tolist():
        data['tweet_volume'].append(tweet_count)

    for likes_count in df_dates['likes_count'].tolist():
        data['likes_volume'].append(likes_count)

    for retweets_count in df_dates['retweets_count'].tolist():
        data['retweets_volume'].append(retweets_count)

    for max_tweet in df_dates['max_tweets'].tolist():
        data['max_tweets'].append(max_tweet)

    db.conn.commit()
    db.close()
    return data
