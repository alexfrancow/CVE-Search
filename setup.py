import psycopg2
import configparser
from datetime import datetime
from datetime import date
from app.mods.mod_main.databasePSQL import PSQLDatabase

config = configparser.ConfigParser()
try:
    config.read('./config.ini')

except FileExistsError as err:
    print('File exists error: {0}', err)
    sys.exit(1)

try:
    db = PSQLDatabase()

except Exception as e:
    print(e)
    print("""[!] Hint: docker run --name some-postgres
          -e POSTGRES_PASSWORD=1234
          -p 5432:5432 -e POSTGRES_DB=cve_search_db
          -e POSTGRES_USER=alexfranco postgres""")

# Table creation
commands = ('''Create Table IF NOT EXISTS CVES(CVE_id TEXT PRIMARY KEY,
                 Description TEXT,
                 Publised_Date TEXT,
                 Updated_Date TEXT,
                 Products TEXT,
                 CWE TEXT,
                 CVSS TEXT,
                 CVSS_vector TEXT,
                 CVE_References TEXT,
                 Configurations TEXT
               );''',

            '''Create Table IF NOT EXISTS TwitterTweets(
                                         Tweet_Id BIGINT PRIMARY KEY,
                                         CVE_id TEXT,
                                         Tweet TEXT,
                                         Datestamp TEXT,
                                         Retweet_Count INT,
                                         Replies_Count INT,
                                         Likes_Count INT,
                                         URLs TEXT,
                                         Username TEXT,
                                         CONSTRAINT fk_cves
                                             FOREIGN KEY(CVE_id)
                                                 REFERENCES CVES(CVE_id)
                                                 ON DELETE CASCADE);''',

            '''Create Table IF NOT EXISTS GithubRepos(
                                         repo_id BIGINT PRIMARY KEY,
                                         CVE_id TEXT,
                                         owner TEXT,
                                         forks_count BIGINT,
                                         stargazers_count BIGINT,
                                         sha TEXT,
                                         repository TEXT,
                                         download_url TEXT,
                                         created_at TEXT,
                                         updated_at TEXT,
                                         CONSTRAINT fk_cves
                                             FOREIGN KEY(CVE_id)
                                                 REFERENCES CVES(CVE_id)
                                                 ON DELETE CASCADE);''',
             '''Create Table IF NOT EXISTS GithubReposURLs(CVE_id TEXT,
                                         repo_id BIGINT,
                                         name TEXT,
                                         download_url TEXT PRIMARY KEY,
                                         sha1 TEXT,
                                         date_add TEXT,
                                         epoch BIGINT,
                                         CONSTRAINT fk_cves
                                             FOREIGN KEY(CVE_id)
                                                 REFERENCES CVES(CVE_id)
                                                 ON DELETE CASCADE) ;''')


for command in commands:
    db.query(command)
    print(command)

db.conn.commit()
db.close()
